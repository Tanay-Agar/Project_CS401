-- Create database (if not exists)
CREATE DATABASE IF NOT EXISTS project_db;


USE project_db;


-- Create Users Table
CREATE TABLE IF NOT EXISTS Users (
    userId VARCHAR(255) PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    username VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(255) NOT NULL
);


-- Create Books Table
CREATE TABLE IF NOT EXISTS Books (
    bookId VARCHAR(255) PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author VARCHAR(255) NOT NULL,
    isbn VARCHAR(255) UNIQUE NOT NULL,
    bookType VARCHAR(255) NOT NULL
);


-- Create PhysicalBooks Table
CREATE TABLE IF NOT EXISTS PhysicalBooks (
    bookId VARCHAR(255) PRIMARY KEY,
    location VARCHAR(255) NOT NULL,
    FOREIGN KEY (bookId) REFERENCES Books(bookId) ON DELETE CASCADE
);


-- Create EBooks Table
CREATE TABLE IF NOT EXISTS EBooks (
    bookId VARCHAR(255) PRIMARY KEY,
    format VARCHAR(255) NOT NULL,
    fileSize INT NOT NULL,
    downloadLink VARCHAR(255) NOT NULL,
    FOREIGN KEY (bookId) REFERENCES Books(bookId) ON DELETE CASCADE
);


-- Create Audiobooks Table
CREATE TABLE IF NOT EXISTS Audiobooks (
    bookId VARCHAR(255) PRIMARY KEY,
    format VARCHAR(255) NOT NULL,
    fileSize INT NOT NULL,
    downloadLink VARCHAR(255) NOT NULL,
    narrator VARCHAR(255) NOT NULL,
    duration INT NOT NULL,
    FOREIGN KEY (bookId) REFERENCES Books(bookId) ON DELETE CASCADE
);


-- Create BorrowingRecords Table
CREATE TABLE IF NOT EXISTS BorrowingRecords (
    borrowId VARCHAR(255) PRIMARY KEY,
    userId VARCHAR(255) NOT NULL,
    bookId VARCHAR(255) NOT NULL,
    borrowDate TIMESTAMP NOT NULL,
    returnDate TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES Users(userId) ON DELETE CASCADE,
    FOREIGN KEY (bookId) REFERENCES Books(bookId) ON DELETE CASCADE
);


-- Create index on BorrowingRecords for efficient querying
CREATE INDEX idx_borrowing_user_book ON BorrowingRecords(userId, bookId);